#include<bits/stdc++.h>
using namespace std ;
#define ll long long
#define udll unsigned long long
#define pb push_back
#define mii map <int, int>
#define mll map <ll, ll>
#define pii pair <int, int>
#define pll pair <ll, ll>
#define vi vector <int>
#define vd vector <double>
#define vll vector <ll>
#define fi first
#define se second
#define si set <int>
#define sll set <ll>
#define spii set <pii>
#define vs vector <string>
#define vpii vector <pair <int,int> >
#define vpll vector <pair <long long,long long> >
#define vvi vector <vector <int> >
#define vvpii vector <vector <pii > >
#define mp make_pair
#define vvll vector <vll>
#define vsi vector <si>
#define forn(i, n) for (int i = 0; i <= (n); i++)
#define rep(i, n) for (int i = 0; i < (n); i++)
#define for1(i, n) for (int i = 1; i < (n); i++)
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define haha ios::sync_with_stdio(false); cin.tie(0);cout.tie(0)
const ll mod = 1e9 + 7 ;

void elections(deque<char> &dq , ll n)
{

// Intialize c1 and c2 for A and B 
// Let's consider this example  " B - - - A "
    ll c1 = 0 , c2 = 0 ;

	while(!dq.empty())
	{
		char x = dq.front() ;

		dq.pop_front() ;
	
	
		ll c3 = 0 ;	// C3 for '-' (neutral voters)

		if(x == '-')
		{
			c3++ ;
			while(dq.front() == '-')
			{
				c3++ ;
				dq.pop_front() ;
			}

			if(dq.front() == 'A')
				c1 += c3 ;


		}
		
		// A can only move in left direction so , anything right of A doesn't matter

		else if(x == 'A')
		{
			c1++ ;

			if(dq.front() == '-')
			{
				while(dq.front() == '-')
				{
					c3++ ;
					dq.pop_front() ;
				}

				if(dq.front() == 'A')
					c1 += c3 ;
			}
			else
                continue ;
		}
		
		// B Only moves in right direction , so if the next to B is '-' , B will try to convice him
		else if(x == 'B')
		{
			c2++ ;					// c2 = 1 

			if(dq.front() == '-')  			//  Dequeue at present moment " - - - A "
			{
				while(dq.front() == '-')
				{
					c3++ ;
					dq.pop_front() ;
				}				// c3 is now 3 , Dequeue " A "

				if(dq.front() == 'A') 		// After 3 pops , "A" is encounter , so the votes will be split in 2 
								
				{
					ll votes = floor(c3/2) ;		// votes = 3/2 i.e 1 
          
					c1 += votes ;				// c1 = 1 

					c2 += votes ;				// c2 = 2
				}

				else if(dq.front() == 'B')
					c2 += c3 ;
			}

		}
		// after first iteration the deuque will only contain -> " A " , therefore c1 += 1 , c1 = 2 
		
		// Visual respresntation of the final Queue " B B - A A "
	}
	
	
	// c1 = 2 , c2 = 2 , therefore , Coalition government will be the answer

	if(c1 > c2)
		cout << "A" ;

	else if(c2 > c1)
		cout << "B" ;

	else if(c1 == c2)
	{
		 cout << "Coalition government" ;
	}

}

int main()
{
	ll n ;

	cin >> n ;

	char x ;

	deque <char> dq ;

	for(ll i  = 0 ; i < n ; i++)
	{
		cin >> x ;

		dq.push_back(x) ;
	}

	elections(dq , n) ;

}
